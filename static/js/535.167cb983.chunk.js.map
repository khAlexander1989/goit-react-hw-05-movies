{"version":3,"file":"static/js/535.167cb983.chunk.js","mappings":"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","sources":["components/Box/Box.jsx","components/FilmActorListItem/FilmActorListItem.styled.jsx","components/FilmActorListItem/FilmActorListItem.jsx","components/FilmActorList/FilmActorList.styled.jsx","components/FilmActorList/FilmActorList.jsx","components/Cast/Cast.jsx","services/constants.js","services/fetchMovieAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  layout,\n  space,\n  flexbox,\n  color,\n  borders,\n  shadow,\n  position,\n} from 'styled-system';\n\nexport const Box = styled.div`\n  ${layout}\n  ${flexbox}\n  ${space}\n  ${position}\n  ${color}\n  ${borders}\n  ${shadow}\n`;\n","import styled from 'styled-components';\n\nexport const Photo = styled.img`\n  width: 100%;\n  height: 75%;\n\n  object-fit: cover;\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: ${p => p.theme.space[3]};\n`;\n\nexport const Text = styled.p`\n  font-size: ${p => p.theme.fontSizes[1]};\n  text-align: center;\n`;\n\nexport const Label = styled.span`\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n","import PropTypes from 'prop-types';\nimport { Photo, InfoContainer, Text, Label } from './FilmActorListItem.styled';\nimport noPhoto from './noPhoto.jpg';\n\nexport default function FilmActorListItem({ name, character, photo }) {\n  const photoUrl = photo ? `https://image.tmdb.org/t/p/w200${photo}` : noPhoto;\n\n  return (\n    <>\n      <Photo src={photoUrl} alt={`${name}`}></Photo>\n      <InfoContainer>\n        <Text>{name}</Text>\n        <Text>\n          <Label>character: </Label> {character}\n        </Text>\n      </InfoContainer>\n    </>\n  );\n}\n\nFilmActorListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  photo: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: ${p => p.theme.space[3]};\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Item = styled.li`\n  border-radius: ${p => p.theme.radii.normal};\n  overflow: hidden;\n  box-shadow: 2px 2px 5px 2px rgba(0, 0, 0, 0.2);\n`;\n","import PropTypes from 'prop-types';\nimport FilmActorListItem from 'components/FilmActorListItem';\nimport { Container, Item } from './FilmActorList.styled';\n\nexport default function FilmActorList({ actors }) {\n  return (\n    <Container>\n      {actors.map(({ id, name, character, profile_path }) => (\n        <Item key={id}>\n          <FilmActorListItem\n            name={name}\n            character={character}\n            photo={profile_path ? profile_path : ''}\n          />\n        </Item>\n      ))}\n    </Container>\n  );\n}\n\nFilmActorList.propTypes = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_pathid: PropTypes.string,\n    })\n  ),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { PulseLoader } from 'react-spinners';\n\nimport { fetchMovieDetailsById } from 'services/fetchMovieAPI';\nimport FilmActorList from 'components/FilmActorList';\nimport { STATUS } from 'services/constants';\nimport { Box } from 'components/Box';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [movieCasts, setMovieCasts] = useState();\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setError(null);\n    setStatus(STATUS.PENDING);\n\n    fetchMovieDetailsById(movieId, 'credits')\n      .then(details => {\n        setMovieCasts(details.cast);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(err => {\n        setStatus(STATUS.REJECTED);\n        setError(err.message);\n      });\n  }, [movieId]);\n\n  if (status === STATUS.PENDING) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" pt={3}>\n        <PulseLoader color=\"#E51B36\" />\n      </Box>\n    );\n  }\n\n  if (status === STATUS.RESOLVED) {\n    return movieCasts.length ? (\n      <Box>\n        <FilmActorList actors={movieCasts} />\n      </Box>\n    ) : (\n      <Box pt={3}>We don't have any info about actors for this movie.</Box>\n    );\n  }\n\n  if (status === STATUS.REJECTED) {\n    return <p>{error}</p>;\n  }\n}\n","export const TMDB_API_URL = 'https://api.themoviedb.org/3';\n\nexport const TMDB_API_ENDPOINTS = {\n  TRENDING_MOVIES: '/trending/movie/day',\n  SEARCH_MOVIE: '/search/movie',\n  MOVIE_DETAILS: '/movie/',\n};\n\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const ERROR_404_MESSAGE = 'Oops! Sorry, something went wrong.';\n","import axios from 'axios';\nimport {\n  TMDB_API_ENDPOINTS,\n  TMDB_API_URL,\n  ERROR_404_MESSAGE,\n} from './constants';\n\naxios.defaults.baseURL = TMDB_API_URL;\naxios.defaults.params = { api_key: process.env.REACT_APP_TMDB_API_KEY };\n\nexport async function fetchTrendingMovie() {\n  try {\n    const response = await axios(TMDB_API_ENDPOINTS.TRENDING_MOVIES);\n    return response.data.results;\n  } catch {\n    throw new Error(ERROR_404_MESSAGE);\n  }\n}\n\nexport async function fetchMovieByKeyword(keyword) {\n  const queryParams = `?query=${keyword}`;\n\n  try {\n    const response = await axios(\n      `${TMDB_API_ENDPOINTS.SEARCH_MOVIE}${queryParams}`\n    );\n\n    return response.data.results;\n  } catch {\n    throw new Error(ERROR_404_MESSAGE);\n  }\n}\n\nexport async function fetchMovieDetailsById(id, extraInfo = '') {\n  const extraInfoPath = extraInfo ? `/${extraInfo}` : '';\n\n  try {\n    const response = await axios(\n      `${TMDB_API_ENDPOINTS.MOVIE_DETAILS}${id}${extraInfoPath}`\n    );\n    return response.data;\n  } catch {\n    throw new Error(ERROR_404_MESSAGE);\n  }\n}\n"],"names":["Box","styled","layout","flexbox","space","position","color","borders","shadow","Photo","InfoContainer","p","theme","Text","fontSizes","Label","fontWeights","bold","FilmActorListItem","name","character","photo","photoUrl","noPhoto","src","alt","Container","Item","radii","normal","FilmActorList","actors","map","id","profile_path","Cast","movieId","useParams","useState","movieCasts","setMovieCasts","STATUS","status","setStatus","error","setError","useEffect","fetchMovieDetailsById","then","details","cast","catch","err","message","display","justifyContent","pt","PulseLoader","length","TMDB_API_URL","TMDB_API_ENDPOINTS","TRENDING_MOVIES","SEARCH_MOVIE","MOVIE_DETAILS","IDLE","PENDING","RESOLVED","REJECTED","ERROR_404_MESSAGE","fetchTrendingMovie","axios","response","data","results","Error","fetchMovieByKeyword","keyword","queryParams","extraInfo","extraInfoPath","api_key","process"],"sourceRoot":""}