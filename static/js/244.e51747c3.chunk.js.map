{"version":3,"file":"static/js/244.e51747c3.chunk.js","mappings":"yMAWaA,EAAMC,EAAAA,GAAAA,IAAH,wEACZC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,2JChBSC,EAASR,EAAAA,GAAAA,GAAH,2EAED,SAAAS,GAAC,OAAIA,EAAEC,MAAMP,MAAM,EAAlB,IAINQ,EAASX,EAAAA,GAAAA,EAAH,6CACF,SAAAS,GAAC,OAAIA,EAAEC,MAAME,YAAYC,OAAxB,IAGLC,EAAUd,EAAAA,GAAAA,EAAH,4CACJ,SAAAS,GAAC,OAAIA,EAAEC,MAAMP,MAAM,EAAlB,I,mBCJF,SAASY,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,GAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BL,EAAAA,EAAAA,YAA1B,eAAOM,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,EAAS,MACTF,EAAUF,EAAAA,GAAAA,UAEVM,EAAAA,EAAAA,IAAsBX,EAAS,WAC5BY,MAAK,SAAAC,GACJT,EAAgBS,EAAQC,SACxBP,EAAUF,EAAAA,GAAAA,SACX,IACAU,OAAM,SAAAC,GACLT,EAAUF,EAAAA,GAAAA,UACVI,EAASO,EAAIC,QACd,GACJ,GAAE,CAACjB,IAEAM,IAAWD,EAAAA,GAAAA,SAEX,SAACtB,EAAA,EAAD,CAAKmC,QAAQ,OAAOC,eAAe,SAASC,GAAI,EAAhD,UACE,SAACC,EAAA,EAAD,CAAahC,MAAM,cAKrBiB,IAAWD,EAAAA,GAAAA,UAEX,SAACtB,EAAA,EAAD,CAAKuC,GAAG,KAAKC,GAAI,EAAGC,GAAI,EAAxB,SACGrB,EAAasB,OACZtB,EAAauB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAA2BC,EAAlC,EAAgBC,eAAkBD,KAAlC,OACf,UAACrC,EAAD,YACE,UAACG,EAAD,sBAAiBkC,MACjB,SAAC/B,EAAD,UAAU8B,MAFCD,EADE,KAOjB,uEAMJrB,IAAWD,EAAAA,GAAAA,UACN,uBAAIG,SADb,CAGD,C,gIC1DM,IAAMuB,EAAe,+BAEfC,EAAqB,CAChCC,gBAAiB,sBACjBC,aAAc,gBACdC,cAAe,WAGJ9B,EAAS,CACpB+B,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,YAGCC,EAAoB,oC,6JCL1B,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAEoBC,EAAAA,EAAAA,IAAMV,EAAAA,GAAAA,iBAF1B,cAEGW,EAFH,yBAGIA,EAASC,KAAK9B,SAHlB,sCAKG,IAAI+B,MAAML,EAAAA,IALb,gFASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,gFACCC,EADD,iBACyBD,GADzB,mBAIoBL,EAAAA,EAAAA,IAAM,GAAD,OACvBV,EAAAA,GAAAA,cADuB,OACWgB,IALpC,cAIGL,EAJH,yBAQIA,EAASC,KAAK9B,SARlB,sCAUG,IAAI+B,MAAML,EAAAA,IAVb,gFAcA,SAAe7B,EAAtB,+CAAO,OAAP,oBAAO,WAAqCgB,GAArC,8FAAyCsB,EAAzC,+BAAqD,GACpDC,EAAgBD,EAAS,WAAOA,GAAc,GAD/C,mBAIoBP,EAAAA,EAAAA,IAAM,GAAD,OACvBV,EAAAA,GAAAA,eADuB,OACYL,GADZ,OACiBuB,IAL1C,cAIGP,EAJH,yBAOIA,EAASC,MAPb,sCASG,IAAIC,MAAML,EAAAA,IATb,iFA1BPE,EAAAA,GAAAA,SAAAA,QAAyBX,EAAAA,GACzBW,EAAAA,GAAAA,SAAAA,OAAwB,CAAES,QAASC,mC","sources":["components/Box/Box.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/constants.js","services/fetchMovieAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  layout,\n  space,\n  flexbox,\n  color,\n  borders,\n  shadow,\n  position,\n} from 'styled-system';\n\nexport const Box = styled.div`\n  ${layout}\n  ${flexbox}\n  ${space}\n  ${position}\n  ${color}\n  ${borders}\n  ${shadow}\n`;\n","import styled from 'styled-components';\n\nexport const Review = styled.li`\n  :not(:first-child) {\n    margin-top: ${p => p.theme.space[3]};\n  }\n`;\n\nexport const Author = styled.p`\n  font-weight: ${p => p.theme.fontWeights.heading};\n`;\n\nexport const Content = styled.p`\n  margin-top: ${p => p.theme.space[2]};\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { PulseLoader } from 'react-spinners';\n\nimport { fetchMovieDetailsById } from 'services/fetchMovieAPI';\nimport { Box } from 'components/Box';\nimport { Review, Author, Content } from './Reviews.styled';\nimport { STATUS } from 'services/constants';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState();\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    setError(null);\n    setStatus(STATUS.PENDING);\n\n    fetchMovieDetailsById(movieId, 'reviews')\n      .then(details => {\n        setMovieReviews(details.results);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(err => {\n        setStatus(STATUS.REJECTED);\n        setError(err.message);\n      });\n  }, [movieId]);\n\n  if (status === STATUS.PENDING) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" pt={3}>\n        <PulseLoader color=\"#E51B36\" />\n      </Box>\n    );\n  }\n\n  if (status === STATUS.RESOLVED) {\n    return (\n      <Box as=\"ul\" px={1} py={3}>\n        {movieReviews.length ? (\n          movieReviews.map(({ id, content, author_details: { name } }) => (\n            <Review key={id}>\n              <Author>Author: {name}</Author>\n              <Content>{content}</Content>\n            </Review>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </Box>\n    );\n  }\n\n  if (status === STATUS.REJECTED) {\n    return <p>{error}</p>;\n  }\n}\n","export const TMDB_API_URL = 'https://api.themoviedb.org/3';\n\nexport const TMDB_API_ENDPOINTS = {\n  TRENDING_MOVIES: '/trending/movie/day',\n  SEARCH_MOVIE: '/search/movie',\n  MOVIE_DETAILS: '/movie/',\n};\n\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const ERROR_404_MESSAGE = 'Oops! Sorry, something went wrong.';\n","import axios from 'axios';\nimport {\n  TMDB_API_ENDPOINTS,\n  TMDB_API_URL,\n  ERROR_404_MESSAGE,\n} from './constants';\n\naxios.defaults.baseURL = TMDB_API_URL;\naxios.defaults.params = { api_key: process.env.REACT_APP_TMDB_API_KEY };\n\nexport async function fetchTrendingMovie() {\n  try {\n    const response = await axios(TMDB_API_ENDPOINTS.TRENDING_MOVIES);\n    return response.data.results;\n  } catch {\n    throw new Error(ERROR_404_MESSAGE);\n  }\n}\n\nexport async function fetchMovieByKeyword(keyword) {\n  const queryParams = `?query=${keyword}`;\n\n  try {\n    const response = await axios(\n      `${TMDB_API_ENDPOINTS.SEARCH_MOVIE}${queryParams}`\n    );\n\n    return response.data.results;\n  } catch {\n    throw new Error(ERROR_404_MESSAGE);\n  }\n}\n\nexport async function fetchMovieDetailsById(id, extraInfo = '') {\n  const extraInfoPath = extraInfo ? `/${extraInfo}` : '';\n\n  try {\n    const response = await axios(\n      `${TMDB_API_ENDPOINTS.MOVIE_DETAILS}${id}${extraInfoPath}`\n    );\n    return response.data;\n  } catch {\n    throw new Error(ERROR_404_MESSAGE);\n  }\n}\n"],"names":["Box","styled","layout","flexbox","space","position","color","borders","shadow","Review","p","theme","Author","fontWeights","heading","Content","Reviews","movieId","useParams","useState","movieReviews","setMovieReviews","STATUS","status","setStatus","error","setError","useEffect","fetchMovieDetailsById","then","details","results","catch","err","message","display","justifyContent","pt","PulseLoader","as","px","py","length","map","id","content","name","author_details","TMDB_API_URL","TMDB_API_ENDPOINTS","TRENDING_MOVIES","SEARCH_MOVIE","MOVIE_DETAILS","IDLE","PENDING","RESOLVED","REJECTED","ERROR_404_MESSAGE","fetchTrendingMovie","axios","response","data","Error","fetchMovieByKeyword","keyword","queryParams","extraInfo","extraInfoPath","api_key","process"],"sourceRoot":""}