{"version":3,"file":"static/js/301.84f55982.chunk.js","mappings":"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","sources":["components/Box/Box.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/constants.js","services/fetchMovieAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  layout,\n  space,\n  flexbox,\n  color,\n  borders,\n  shadow,\n  position,\n} from 'styled-system';\n\nexport const Box = styled.div`\n  ${layout}\n  ${flexbox}\n  ${space}\n  ${position}\n  ${color}\n  ${borders}\n  ${shadow}\n`;\n","import styled from 'styled-components';\n\nexport const Poster = styled.img`\n  height: 350px;\n  box-shadow: 1px 1px 1px 2px rgba(0, 0, 0, 0.2);\n`;\n\nexport const Title = styled.h2`\n  font-size: ${p => p.theme.fontSizes[5]};\n`;\nexport const Label = styled.span`\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Text = styled.p`\n  margin-top: ${p => p.theme.space[3]};\n`;\n","import PropTypes from 'prop-types';\n\nimport { Box } from 'components/Box';\nimport { Title, Label, Text, Poster } from './MovieCard.styled';\nimport noImage from './no-image.jpg';\n\nexport default function MovieCard({ details }) {\n  const {\n    poster_path = '',\n    title = '',\n    release_date = '',\n    vote_average = '',\n    overview = '',\n    genres = [],\n  } = details;\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w200${poster_path}`\n    : noImage;\n  const userScore = Math.round(vote_average * 10);\n  const movieGenres = genres.map(genre => genre.name).join(', ');\n\n  return (\n    <Box display=\"flex\" my={3}>\n      <Poster src={posterUrl} alt={`${title} poster`} />\n      <Box px={3}>\n        <Title>\n          {title} ({release_date.slice(0, 4)})\n        </Title>\n        <Text>\n          <Label>User Score:</Label> {userScore}%\n        </Text>\n        <Text>\n          <Label>Overview:</Label> {overview}\n        </Text>\n        <Text>\n          <Label>Genres:</Label> {movieGenres}\n        </Text>\n      </Box>\n    </Box>\n  );\n}\n\nMovieCard.propTypes = {\n  details: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  }),\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Item = styled.li`\n  margin-top: ${p => p.theme.space[3]};\n`;\n\nexport const Title = styled.h2`\n  font-size: ${p => p.theme.fontSizes[3]};\n`;\n\nexport const Link = styled(NavLink)`\n  display: block;\n  padding: ${p => p.theme.space[2]} ${p => p.theme.space[3]};\n  font-size: ${p => p.theme.fontSizes[2]};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  text-decoration: none;\n  color: ${p => p.theme.colors.red};\n\n  border: 1px solid;\n  border-color: transparent;\n\n  border-color: ${p => p.theme.colors.red};\n\n  &.active {\n    background-color: ${p => p.theme.colors.red};\n    color: ${p => p.theme.colors.textWhite};\n  }\n`;\n","import { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { PulseLoader } from 'react-spinners';\n\nimport { fetchMovieDetailsById } from 'services/fetchMovieAPI';\nimport MovieCard from 'components/MovieCard';\nimport { Title, Link, Item } from './MovieDetails.styled';\nimport { STATUS } from 'services/constants';\nimport { Box } from 'components/Box';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    setError(null);\n    setStatus(STATUS.PENDING);\n\n    fetchMovieDetailsById(movieId)\n      .then(details => {\n        setMovieDetails(details);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(err => {\n        setStatus(STATUS.REJECTED);\n        setError(err.message);\n      });\n  }, [movieId]);\n\n  const prevPath = location.state?.from ?? '/movies';\n\n  if (status === STATUS.PENDING) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" pt={5}>\n        <PulseLoader color=\"#E51B36\" />\n      </Box>\n    );\n  }\n\n  if (status === STATUS.RESOLVED) {\n    return (\n      <Box as=\"main\">\n        <button type=\"button\" onClick={() => navigate(prevPath)}>\n          Go back\n        </button>\n        <MovieCard details={movieDetails} />\n        <Box borderY=\"default\" borderColor=\"borderPrimary\" py={3}>\n          <Title>Additional information</Title>\n          <Box as=\"ul\" display=\"Flex\">\n            <Item>\n              <Link to=\"cast\" state={{ from: prevPath }}>\n                Cast\n              </Link>\n            </Item>\n            <Item>\n              <Link to=\"reviews\" state={{ from: prevPath }}>\n                Reviews\n              </Link>\n            </Item>\n          </Box>\n        </Box>\n        <Suspense fallback={<p>Loading additionl information...</p>}>\n          <Outlet />\n        </Suspense>\n      </Box>\n    );\n  }\n\n  if (status === STATUS.REJECTED) {\n    return <p>{error}</p>;\n  }\n}\n","export const TMDB_API_URL = 'https://api.themoviedb.org/3';\n\nexport const TMDB_API_ENDPOINTS = {\n  TRENDING_MOVIES: '/trending/movie/day',\n  SEARCH_MOVIE: '/search/movie',\n  MOVIE_DETAILS: '/movie/',\n};\n\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const ERROR_404_MESSAGE = 'Oops! Sorry, something went wrong.';\n","import axios from 'axios';\nimport {\n  TMDB_API_ENDPOINTS,\n  TMDB_API_URL,\n  ERROR_404_MESSAGE,\n} from './constants';\n\naxios.defaults.baseURL = TMDB_API_URL;\naxios.defaults.params = { api_key: process.env.REACT_APP_TMDB_API_KEY };\n\nexport async function fetchTrendingMovie() {\n  try {\n    const response = await axios(TMDB_API_ENDPOINTS.TRENDING_MOVIES);\n    return response.data.results;\n  } catch {\n    throw new Error(ERROR_404_MESSAGE);\n  }\n}\n\nexport async function fetchMovieByKeyword(keyword) {\n  const queryParams = `?query=${keyword}`;\n\n  try {\n    const response = await axios(\n      `${TMDB_API_ENDPOINTS.SEARCH_MOVIE}${queryParams}`\n    );\n\n    return response.data.results;\n  } catch {\n    throw new Error(ERROR_404_MESSAGE);\n  }\n}\n\nexport async function fetchMovieDetailsById(id, extraInfo = '') {\n  const extraInfoPath = extraInfo ? `/${extraInfo}` : '';\n\n  try {\n    const response = await axios(\n      `${TMDB_API_ENDPOINTS.MOVIE_DETAILS}${id}${extraInfoPath}`\n    );\n    return response.data;\n  } catch {\n    throw new Error(ERROR_404_MESSAGE);\n  }\n}\n"],"names":["Box","styled","layout","flexbox","space","position","color","borders","shadow","Poster","Title","p","theme","fontSizes","Label","fontWeights","bold","Text","MovieCard","details","poster_path","title","release_date","vote_average","overview","genres","posterUrl","noImage","userScore","Math","round","movieGenres","map","genre","name","join","display","my","src","alt","px","slice","Item","Link","NavLink","colors","red","textWhite","MovieDetails","movieId","useParams","useState","movieDetails","setMovieDetails","STATUS","status","setStatus","error","setError","navigate","useNavigate","location","useLocation","useEffect","fetchMovieDetailsById","then","catch","err","message","prevPath","state","from","justifyContent","pt","PulseLoader","as","type","onClick","borderY","borderColor","py","to","Suspense","fallback","TMDB_API_URL","TMDB_API_ENDPOINTS","TRENDING_MOVIES","SEARCH_MOVIE","MOVIE_DETAILS","IDLE","PENDING","RESOLVED","REJECTED","ERROR_404_MESSAGE","fetchTrendingMovie","axios","response","data","results","Error","fetchMovieByKeyword","keyword","queryParams","id","extraInfo","extraInfoPath","api_key","process"],"sourceRoot":""}